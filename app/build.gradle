plugins {
    id 'com.android.application'
}

apply plugin: "com.github.willir.rust.cargo-ndk-android"


android {
    namespace 'com.example.WhisperVoiceKeyboard'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.WhisperVoiceKeyboard"
        minSdk 30
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    ndkVersion '25.1.8937393'
    buildToolsVersion '33.0.0'
}

cargoNdk {
    targets = ["arm64", "x86_64"]  // See bellow for a longer list of options
    apiLevel = 30

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def sdkDir = properties.getProperty('sdk.dir')
    def ndkDir = properties.getProperty('ndk.dir')

    librariesNames = ["librust.so"]
    extraCargoEnv = [
            "ANDROID_SDK_HOME"                              : "${sdkDir}/",
            "ANDROID_NDK_HOME"                              : "${ndkDir}/",
            "ANDROID_NDK_API_LEVEL"                         : apiLevel,
            "ANDROID_SDK_VERSION"                           : apiLevel,
            "ANDROID_API_LEVEL"                             : apiLevel,
            "ANDROID_BUILD_TOOLS_VERSION"                   : "33.0.0",
            "ANDROID_HOME"                                  : "${sdkDir}/build-tools/33.0.0",
            "BINDGEN_EXTRA_CLANG_ARGS_X86_64_LINUX_ANDROID" : "-I${ndkDir}/sources/cxx-stl/llvm-libc++/include/ -I${ndkDir}/sysroot/usr/include/ -I${ndkDir}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/include/x86_64_linux_android/",
            "BINDGEN_EXTRA_CLANG_ARGS_AARCH64_LINUX_ANDROID": "-I${ndkDir}/sources/cxx-stl/llvm-libc++/include/ -I${ndkDir}/sysroot/usr/include/ -I${ndkDir}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/include/aarch64_linux_android/",
            "TFLITEC_PREBUILT_PATH_X86_64_LINUX_ANDROID"    : "${project.rootDir}/app/src/main/jniLibs/x86_64/libtensorflowlite_c.so",
            "TFLITEC_PREBUILT_PATH_AARCH64_LINUX_ANDROID"   : "${project.rootDir}/app/src/main/jniLibs/arm64-v8a/libtensorflowlite_c.so",
            "PKG_CONFIG_SYSROOT_DIR_aarch64_linux_android"  : "${ndkDir}/toolchains/llvm/prebuilt/linux-x86_64/sysroot",
            "PKG_CONFIG_ALLOW_CROSS"                        : "true",

    ]


}


dependencies {
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.7.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}